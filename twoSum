#Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
#You may assume that each input would have exactly one solution, and you may not use the same element twice.
#You can return the answer in any order.
#ex:
#Input: nums = [2,7,11,15], target = 9
#Output: [0,1]
#Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        myDict = {}
        for i,val in enumerate(nums):
            diff = target - val
            if diff in myDict:
                return [myDict[diff],i]
            else:
                myDict[val] = i
        return

###
### remove dublicate from sorted list
###
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        j = 0
        while j < len(nums) -1:
            if nums[j] == nums[j+1]:
                del nums[j]
            else:
                j += 1
        return len(nums)
